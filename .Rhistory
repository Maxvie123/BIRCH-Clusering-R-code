CF1$Radius <- ComputeRadius(CF1$N, CF1$LS, CF1$SS)
return(BirchTree)
}
###########################################################################################
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,1)
print(tree,"N")
# create a new CF node
CreateNewCF = function(datapoint, PN){
# Create new CF
CFName <- paste("CF", PN$root$N+1, sep="")
NewCF <- PN$AddChild(CFName)
# initialize CF attribute
NewCF$Center <- as.numeric(datapoint)
NewCF$N <-1
NewCF$LS <-as.numeric(datapoint)
NewCF$SS <-as.numeric(datapoint*datapoint)
NewCF$List <-c(rownames(datapoint))
NewCF$Radius <- ComputeRadius(NewCF$N, NewCF$LS, NewCF$SS)
#update root atrribute
CFNode$root$N <- CFNode$root$N + 1
}
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,1)
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,1)
#update root atrribute
PN$root$N <- PN$root$N + 1
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,1)
# create a new CF node
CreateNewCF = function(datapoint, PN){
#update root atrribute
PN$root$N <- PN$root$N + 1
# Create new CF
CFName <- paste("CF", PN$root$N, sep="")
NewCF <- PN$AddChild(CFName)
# initialize CF attribute
NewCF$Center <- as.numeric(datapoint)
NewCF$N <-1
NewCF$LS <-as.numeric(datapoint)
NewCF$SS <-as.numeric(datapoint*datapoint)
NewCF$List <-c(rownames(datapoint))
NewCF$Radius <- ComputeRadius(NewCF$N, NewCF$LS, NewCF$SS)
}
BuildTree(t,tree, 3,3,1)
print(tree,"N")
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,1)
print(tree,"N")
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,1)
NLN$root
NLN$root$N
# create the initial tree
InitialTree = function(firstpoint)
{
# Initial the tree, add base node, 1st root, non-leaf, leaf and cf node in the tree
BirchTree<- Node$new("Tree")
Root1<- BirchTree$AddChild("Root1")
NLN1 <- Root1$AddChild("NLN1")
LN1 <- NLN1$AddChild("LN1")
CF1 <- LN1$AddChild("CF1")
# Tree node has 1 attributes: The The number of CF nodes
BirchTree$N <- 1
# Root node has 2 attributes: The number of CF nodes; center value
Root1$N <-1
Root1$Center <- as.numeric(firstpoint)
Root1$CFIndex <-1
# Non-leaf node has 2 attributes: The number of CF nodes; center value
NLN1$N <-1
NLN1$Center <-as.numeric(firstpoint)
# leaf node has 2 attributes: The number of CF nodes; center value
LN1$N <-1
LN1$Center <-as.numeric(firstpoint)
# CF node has 6 attributes: The number of points; center value;
# Point index list; Radius; Linear sum; Square Sum
CF1$Center <- as.numeric(firstpoint)
CF1$N <-1
CF1$LS <-as.numeric(firstpoint)
CF1$SS <-as.numeric(firstpoint*firstpoint)
CF1$List <-c(rownames(firstpoint))
CF1$Radius <- ComputeRadius(CF1$N, CF1$LS, CF1$SS)
return(BirchTree)
}
tree <- InitialTree(c)
NLN <- FindNode(tree,"NLN1")
LN <- FindNode(tree, "LN1")
NLN$root$N
BuildTree(t,tree, 3,3,1)
source('C:/Users/Jingwei Liu/OneDrive - Auburn University/INSY7130/Class materials/BIRCH clustering/sourcefile.R')
BuildTree(t,tree, 3,3,1)
NLN$root$N
NLN$root$N
tree <- InitialTree(c)
NLN$root$N
NLN <- FindNode(tree,"NLN1")
NLN$root$N
NLN$root$N <-NLN$root$N +1
NLN$root$N <- 2
root <- NLN$root
root$N
tree <- InitialTree(c)
NLN <- FindNode(tree,"NLN1")
root <- NLN$root
root$N
root$N <- root$N +1
root$N
tree
print(tree,"N")
# create a new CF node
CreateNewCF = function(datapoint, PN){
#update root atrribute
root <- PN$root
root$N <- root$N + 1
# Create new CF
CFName <- paste("CF", PN$root$N, sep="")
NewCF <- PN$AddChild(CFName)
# initialize CF attribute
NewCF$Center <- as.numeric(datapoint)
NewCF$N <-1
NewCF$LS <-as.numeric(datapoint)
NewCF$SS <-as.numeric(datapoint*datapoint)
NewCF$List <-c(rownames(datapoint))
NewCF$Radius <- ComputeRadius(NewCF$N, NewCF$LS, NewCF$SS)
}
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,1)
print(tree,"N")
BuildTree(a,tree, 3,3,1)
print(tree,"N")
View(newfile)
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,0.1)
print(tree,"N")
BuildTree(a,tree, 3,3,0.1)
print(tree,"N")
tree$fields
tree$fieldsAll
append(vv,"ln1")
vv <- vector()
append(vv,"ln1")
vv <- append(vv,"ln2")
vv <- vector()
vv <- append(vv,"ln1")
vv <- append(vv,"ln2")
vv
# create a new CF node
CreateNewCF = function(datapoint, PN){
#update root atrribute
root <- PN$root
root$CFN <- root$CFN + 1
# Create new CF
CFName <- paste("CF", PN$root$CFN, sep="")
NewCF <- PN$AddChild(CFName)
# initialize CF attribute
NewCF$Center <- as.numeric(datapoint)
NewCF$N <-1
NewCF$LS <-as.numeric(datapoint)
NewCF$SS <-as.numeric(datapoint*datapoint)
NewCF$List <-c(rownames(datapoint))
NewCF$Radius <- ComputeRadius(NewCF$N, NewCF$LS, NewCF$SS)
}
BirchTree$Root <-1
# Create new CF
CFName <- paste("CF", PN$root$CF, sep="")
source('C:/Users/Jingwei Liu/OneDrive - Auburn University/INSY7130/Class materials/BIRCH clustering/sourcefile.R')
# create the initial tree
InitialTree = function(firstpoint)
{
# Initial the tree, add base node, 1st root, non-leaf, leaf and cf node in the tree
BirchTree<- Node$new("Tree")
Root1<- BirchTree$AddChild("Root1")
NLN1 <- Root1$AddChild("NLN1")
LN1 <- NLN1$AddChild("LN1")
CF1 <- LN1$AddChild("CF1")
# Tree node has 4 attributes: The The number of CF nodes;
# the number of leaf nodes; the number of non-leaf nodes;
# the number of root nodes
BirchTree$CF <- 1
BirchTree$LN <- 1
BirchTree$NLN <-1
BirchTree$Root <-1
# Root node has 4 attributes: The number of points; linear sum;
# square sum; center value
Root1$N <-1
Root1$LS <- 0
Root1$SS <- 0
Root1$Center <- as.numeric(firstpoint)
# Non-leaf node has 4 attributes: The number of points; linear sum;
# square sum; center value
NLN1$N <-1
NLN1$LS <- 0
NLN1$SS <- 0
NLN1$Center <-as.numeric(firstpoint)
# leaf node has 4 attributes: The number of points; linear sum;
# square sum; center value
LN1$N <-1
LN1$LS <-0
LN1$SS <- 0
LN1$Center <-as.numeric(firstpoint)
# CF node has 6 attributes: The number of points; center value;
# point index list; radius; linear sum; square Sum
CF1$Center <- as.numeric(firstpoint)
CF1$N <-1
CF1$LS <-as.numeric(firstpoint)
CF1$SS <-as.numeric(firstpoint*firstpoint)
CF1$List <-c(rownames(firstpoint))
CF1$Radius <- ComputeRadius(CF1$N, CF1$LS, CF1$SS)
return(BirchTree)
}
tree <- InitialTree(c)
print(tree,"N")
# create the initial tree
InitialTree = function(firstpoint)
{
# Initial the tree, add base node, 1st root, non-leaf, leaf and cf node in the tree
BirchTree<- Node$new("Tree")
Root1<- BirchTree$AddChild("Root1")
NLN1 <- Root1$AddChild("NLN1")
LN1 <- NLN1$AddChild("LN1")
CF1 <- LN1$AddChild("CF1")
# Tree node has 5 attributes: The number of points;
# The The number of CF nodes; the number of leaf nodes;
# the number of non-leaf nodes; the number of root nodes
BirchTree$N <-1
BirchTree$CF <-1
BirchTree$LN <-1
BirchTree$NLN <-1
BirchTree$Root <-1
# Root node has 4 attributes: The number of points; linear sum;
# square sum; center value
Root1$N <-1
Root1$LS <- 0
Root1$SS <- 0
Root1$Center <- as.numeric(firstpoint)
# Non-leaf node has 4 attributes: The number of points; linear sum;
# square sum; center value
NLN1$N <-1
NLN1$LS <- 0
NLN1$SS <- 0
NLN1$Center <-as.numeric(firstpoint)
# leaf node has 4 attributes: The number of points; linear sum;
# square sum; center value
LN1$N <-1
LN1$LS <-0
LN1$SS <- 0
LN1$Center <-as.numeric(firstpoint)
# CF node has 6 attributes: The number of points; center value;
# point index list; radius; linear sum; square Sum
CF1$Center <- as.numeric(firstpoint)
CF1$N <-1
CF1$LS <-as.numeric(firstpoint)
CF1$SS <-as.numeric(firstpoint*firstpoint)
CF1$List <-c(rownames(firstpoint))
CF1$Radius <- ComputeRadius(CF1$N, CF1$LS, CF1$SS)
return(BirchTree)
}
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,0.1)
print(tree,"N")
# create a new CF node
CreateNewCF = function(datapoint, PN){
#update root atrribute
root <- PN$root
root$CF <- root$CF + 1
# Create new CF
CFName <- paste("CF", PN$root$CF, sep="")
NewCF <- PN$AddChild(CFName)
# initialize CF attribute
NewCF$Center <- as.numeric(datapoint)
NewCF$N <-1
NewCF$LS <-as.numeric(datapoint)
NewCF$SS <-as.numeric(datapoint*datapoint)
NewCF$List <-c(rownames(datapoint))
NewCF$Radius <- ComputeRadius(NewCF$N, NewCF$LS, NewCF$SS)
}
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,0.1)
print(tree,"N")
# create a new CF node
CreateNewCF = function(datapoint, PN){
#update root atrribute
root <- PN$root
root$CF <- root$CF+1
# Create new CF
CFName <- paste("CF", PN$root$CF, sep="")
NewCF <- PN$AddChild(CFName)
# initialize CF attribute
NewCF$Center <- as.numeric(datapoint)
NewCF$N <-1
NewCF$LS <-as.numeric(datapoint)
NewCF$SS <-as.numeric(datapoint*datapoint)
NewCF$List <-c(rownames(datapoint))
NewCF$Radius <- ComputeRadius(NewCF$N, NewCF$LS, NewCF$SS)
}
tree <- InitialTree(c)
print(tree,"N")
BuildTree(t,tree, 3,3,0.1)
print(tree,"N")
# create a new CF node
CreateNewCF = function(datapoint, PN){
#update root atrribute
rootNode <- PN$root
rootNode$CF <- rootNode$CF+1
# Create new CF
CFName <- paste("CF", PN$root$CF, sep="")
NewCF <- PN$AddChild(CFName)
# initialize CF attribute
NewCF$Center <- as.numeric(datapoint)
NewCF$N <-1
NewCF$LS <-as.numeric(datapoint)
NewCF$SS <-as.numeric(datapoint*datapoint)
NewCF$List <-c(rownames(datapoint))
NewCF$Radius <- ComputeRadius(NewCF$N, NewCF$LS, NewCF$SS)
}
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,0.1)
print(tree,"N")
tree <- InitialTree(c)
BuildTree(t,tree, 3,3,0.1)
print(tree,"N","CF")
BuildTree(a,tree, 3,3,0.1)
print(tree,"N","CF")
NLN <- FindNode(tree,"NLN1")
LN <- FindNode(tree, "LN1")
NLN
PrefixName <- substr(NLN$name,1,NLN(Node$name)-1)
NLN <- FindNode(tree,"NLN1")
PrefixName <- substr(NLN$name,1,NLN(Node$name)-1)
PrefixName <- substr(NLN$name,1,nchar(NLN$name)-1)
tree$PrefixName
tree$NLN
tree$"NLN"
tree$"CF"
tree$as.string(PrefixName)
library(data.tree)
library(DiagrammeR)
library(reshape2)
library(readxl)
library(igraph)
# make sure your working directory is correct
getwd()
setwd('C:/Users/Jingwei Liu/OneDrive - Auburn University/INSY7130/Class materials/BIRCH clustering')
getwd()
source('BIRCH_Source.R')
newfile <- as.data.frame(read_excel(file.choose()))  # Search for the the file
# Calculate the number of observations of the data. We use this for sampling.
n <- nrow(newfile)
n
#For example, if we only work with a subset of obs. we draw a sample of size n without replacement from the ID's of the data (i.e. the number of the row)
set.seed(3) #Set the seed to replicate results
s_size = 300 # sample size
sample.id <- sample(1:n, s_size, replace = FALSE) #sampling
sample.id
#Filter only the selected ID's
samplenewfile <- newfile[sample.id, 1:2] # get samples from iris dataset
# do BIRCH clustering
tree <- BIRCHCluster(samplenewfile,BrachingFactor = 3, LeafEntries = 6, Threshold = 2)
source('BIRCH_Source.R')
# make sure your working directory is correct
getwd()
setwd('C:/Users/Jingwei Liu/OneDrive - Auburn University/INSY7130/Class materials/BIRCH clustering')
getwd()
source('BIRCH_Source.R')
setwd('C:/Users/Jingwei Liu/OneDrive - Auburn University/INSY7130/Class materials/BIRCH clustering/BIRCH-Clustering-R-code')
getwd()
source('BIRCH_Source.R')
# do BIRCH clustering
tree <- BIRCHCluster(samplenewfile,BrachingFactor = 3, LeafEntries = 6, Threshold = 2)
# do BIRCH clustering
tree <- BIRCHCluster(samplenewfile,BranchingFactor = 3, LeafEntries = 6, Threshold = 2)
tree
test <- ToDataFrameTree(tree, "name","Center")
View(test)
############################################################################################################################################
# if the data has a certain class, you can check how the observations locate in each cluster
TargetCluster <- FindNode(tree,"LN5")
df <- GetObs(newfile,TargetCluster)
table(df$Class)
test <- ToDataFrameTree(tree, "name","level","Center")
View(test)
View(test)
mask <- test$level == 5
aa <- test[mask,]
View(aa)
aa <- test[mask,c("name","Center")]
View(aa)
row.names(aa) <- NULL
View(aa)
aa[1]
aa$Center[1]
type(aa$Center[1])
typeof(aa$Center[1])
View(df)
View(df)
test <- ToDataFrameTree(tree, "name","level")
mask <- test$level == 5
aa <- test[mask,c("name")]
row.names(aa) <- NULL
aa[1]
aa[1,]
test <- ToDataFrameTree(tree, "name","level")
mask <- test$level == 5
aa <- test[mask,]
row.names(aa) <- NULL
View(aa)
for (ele in aa){
TargetNode <- FindNode(tree, ele$name)
ele$Center <- TargetNode$Center
}
for (ele in aa){
#TargetNode <- FindNode(tree, ele$name)
#ele$Center <- TargetNode$Center
print(ele$name)
}
source('BIRCH_Source.R')
test <- ToDataFrameByLevel(tree, 5)
source('BIRCH_Source.R')
test <- ToDataFrameByLevel(tree, 5)
rows(aa)
rownames(aa)
rownames(aa)[1]
bb <- rownames(aa)[1]
aa$name[bb]
aa[bb,]$name
aa[bb,]$Center <- 0
View(aa)
aa$Center <- 0
View(aa)
aa[bb,]$Center <- c(3,2)
aa$Center <- NULL
View(aa)
aa[bb,]$Center <- c(3,2)
aa$Center <- as.numeric(newfile[1,1:2])
View(aa)
aa[bb,]$Center <- c(3,2)
aa[bb,]$Center
test <- ToDataFrameTree(tree, "name","level")
mask <- test$level == 5
aa <- test[mask,]
row.names(aa) <- NULL
bb <- rownames(aa)[1]
aa[bb,]$name
aa[1,]$Center <- as.numeric(newfile[1,1:2])
test <- ToDataFrameTree(tree, "name")
mask <- test$level == 5
aa <- test[mask,]
test <- ToDataFrameTree(tree, "name")
mask <- test$level == 5
aa <- test[mask,]
tree
test <- ToDataFrameTree(tree, "name")
mask <- test$level == 5
aa <- test[mask,]
row.names(aa) <- NULL
bb <- rownames(aa)[1]
test <- ToDataFrameTree(tree, "name","level")
mask <- test$level == 5
aa <- test[mask,]
aa <- test[mask,"name"]
test <- ToDataFrameTree(tree, "name","level")
mask <- test$level == 5
aa <- test[mask,"name"]
row.names(aa) <- NULL
aa$Center <- 0
View(aa)
cc <- paste("center",1,sep = "")
aa$cc <- 0
View(aa)
test <- ToDataFrameTree(tree, "name","level")
mask <- test$level == 5
aa <- test[mask,]
row.names(aa) <- NULL
cc <- paste("center",1,sep = "")
aa$cc <- 0
View(aa)
test <- ToDataFrameTree(tree, "name","level")
mask <- test$level == 5
aa <- test[mask,]
row.names(aa) <- NULL
cc <- paste("center",1,sep = "")
aa[cc] <- 0
View(aa)
tree$Center
len(tree$Center)
length(tree$Center)
tree$Center[1]
aa[1,cc]
source('BIRCH_Source.R')
mm <- ToDataFrameByLevel(tree,5)
View(mm)
source('BIRCH_Source.R')
mm <- ToDataFrameByLevel(tree,5)
View(mm)
mm <- ToDataFrameByLevel(tree,5)
1:2
source('BIRCH_Source.R')
mm <- ToDataFrameByLevel(tree,5)
View(mm)
# you can check the fields by using print fuction
print(tree,"Center")
# get the all CF centers to a dataframe
CFcenter <- ToDataFrameByLevel(tree,5)
View(CFcenter)
source('BIRCH_Source.R')
# get the all CF centers to a dataframe
CFcenter <- ToDataFrameByLevel(tree,5)
View(CFcenter)
# get the all CF centers to a dataframe. You can use this dataframe for further clustering method
CFcenter <- ToDataFrameByLevel(tree,4)
View(CFcenter)
